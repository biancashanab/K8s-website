apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: ai-uploads-pvc
  namespace: default
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
  storageClassName: microk8s-hostpath
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: ai-nginx-conf
  namespace: default
data:
  default.conf: |
    server {
        listen       91;
        listen  [::]:91;
        server_name  localhost;
        error_log  /var/log/nginx/error.log debug;
        access_log /var/log/nginx/access.log combined;
        location / {
            root   /usr/share/nginx/html;
            index  index.html index.htm;
            try_files $uri $uri/ /index.html;
        }
        location /ai-service/api/ {
            rewrite ^/ai-service(/api/.*)$ $1 break;
            proxy_pass http://ai-backend.default.svc.cluster.local:89;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            add_header X-Debug-Original-URI $request_uri always;
            add_header X-Debug-Rewritten-URI $uri always;
        }
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   /usr/share/nginx/html;
        }
    }
---
apiVersion: v1
kind: Secret
metadata:
  name: azure-secret
  namespace: default
type: Opaque
stringData:
  AZURE_STORAGE_CONNECTION_STRING: "DefaultEndpointsProtocol=https;AccountName=mystorageaccount;AccountKey=mykey;EndpointSuffix=core.windows.net"
  AZURE_SQL_CONNECTION_STRING: "Server=tcp:myserver.database.windows.net,1433;Initial Catalog=mydb;Persist Security Info=False;User ID=myadmin;Password=mypassword;MultipleActiveResultSets=False;Encrypt=True;TrustServerCertificate=False;Connection Timeout=30;"
  AZURE_ENTITY_EXTRACTION_KEY: "my-entity-extraction-key"
  AZURE_ENTITY_EXTRACTION_ENDPOINT: "https://my-entity-extraction.cognitiveservices.azure.com/"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ai-backend
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ai-backend
  template:
    metadata:
      labels:
        app: ai-backend
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - ai-backend
              topologyKey: kubernetes.io/hostname
      containers:
      - name: backend
        image: localhost:32000/ai-backend:latest
        ports:
        - containerPort: 89
        env:
        - name: AZURE_STORAGE_CONNECTION_STRING
          valueFrom:
            secretKeyRef:
              name: azure-secret
              key: AZURE_STORAGE_CONNECTION_STRING
        - name: AZURE_SQL_CONNECTION_STRING
          valueFrom:
            secretKeyRef:
              name: azure-secret
              key: AZURE_SQL_CONNECTION_STRING
        - name: AZURE_ENTITY_EXTRACTION_KEY
          valueFrom:
            secretKeyRef:
              name: azure-secret
              key: AZURE_ENTITY_EXTRACTION_KEY
        - name: AZURE_ENTITY_EXTRACTION_ENDPOINT
          valueFrom:
            secretKeyRef:
              name: azure-secret
              key: AZURE_ENTITY_EXTRACTION_ENDPOINT
        - name: PORT
          value: "89"
        - name: NODE_ENV
          value: "production"
        resources:
          requests:
            memory: "256Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        volumeMounts:
        - name: uploads
          mountPath: /app/uploads
        readinessProbe:
          httpGet:
            path: /api/health
            port: 89
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 5
        livenessProbe:
          httpGet:
            path: /api/health
            port: 89
          initialDelaySeconds: 15
          periodSeconds: 10
          timeoutSeconds: 5
      volumes:
      - name: uploads
        persistentVolumeClaim:
          claimName: ai-uploads-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: ai-backend
  namespace: default
spec:
  selector:
    app: ai-backend
  ports:
  - protocol: TCP
    port: 89
    targetPort: 89
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ai-frontend
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ai-frontend
  template:
    metadata:
      labels:
        app: ai-frontend
    spec:
      containers:
      - name: frontend
        image: localhost:32000/ai-app:latest
        ports:
        - containerPort: 91
        volumeMounts:
        - name: nginx-config
          mountPath: /etc/nginx/conf.d/
        env:
        - name: API_URL
          value: "http://ai-backend:89/api"
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "256Mi"
            cpu: "200m"
        readinessProbe:
          httpGet:
            path: /
            port: 91
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 5
        livenessProbe:
          httpGet:
            path: /
            port: 91
          initialDelaySeconds: 15
          periodSeconds: 10
          timeoutSeconds: 5
      volumes:
      - name: nginx-config
        configMap:
          name: ai-nginx-conf
---
apiVersion: v1
kind: Service
metadata:
  name: ai-frontend
  namespace: default
spec:
  selector:
    app: ai-frontend
  ports:
  - protocol: TCP
    port: 91
    targetPort: 91
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  name: ai-frontend-lb
  namespace: default
spec:
  type: LoadBalancer
  selector:
    app: ai-frontend
  ports:
  - protocol: TCP
    port: 91
    targetPort: 91
    nodePort: 91
